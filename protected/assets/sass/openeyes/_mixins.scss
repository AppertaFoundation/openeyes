// * OpenEyes
// *
// * (C) Moorfields Eye Hospital NHS Foundation Trust, 2008-2011
// * (C) OpenEyes Foundation, 2011-2013
// * This file is part of OpenEyes.
// * OpenEyes is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
// * OpenEyes is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
// * You should have received a copy of the GNU Affero General Public License along with OpenEyes in a file titled COPYING. If not, see <http://www.gnu.org/licenses/>.
// *
// * @package OpenEyes
// * @link http://www.openeyes.org.uk
// * @author OpenEyes <info@openeyes.org.uk>
//
// * @copyright Copyright (c) 2011-2013, OpenEyes Foundation
// * @license http://www.gnu.org/licenses/agpl-3.0.html The GNU Affero General Public License V3.0

@mixin clearfix {
	*zoom: 1;
	&:before, &:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

// Hide text off-screen without affecting container position.
@mixin hide-text {
	@extend %hide-text;
}

// Hide-text off-screen by changing the container position.
@mixin hide-text-absolutely {
	@extend %hide-text-absolutely;
}

// Sprite mixin for generating sprites and associated classes.
@mixin sprite($icons_path, $class, $width, $height) {
	$icons: sprite-map($icons_path);
	[class*="#{$class}"] {
		background: $icons no-repeat;
		width: $width;
		height: $height;
	}
	@each $i in sprite_names($icons) {
		.#{$class}-#{$i} {
			background-position: sprite-position($icons, $i);
		}
	}
}

// Sprite background position mixing for generating a background-position property
// for a specific image within a sprite set.
@mixin sprite-background-position($icons_path, $image) {
	$icons: sprite-map($icons_path);
	background-position: sprite-position($icons, $image);
}

$oe-selector-form-input-fields: 'input[type="text"],input[type="password"],input[type="date"],input[type="datetime"],input[type="datetime-local"],input[type="month"],input[type="week"],input[type="email"],input[type="number"],input[type="search"],input[type="tel"],input[type="time"],input[type="url"],textarea';
$oe-selector-form-button-fields: 'button, .button, input[type="submit"]';
$oe-selector-form-select-fields: "select";

// Apply a set of rules to input form fields.
@mixin input-form-fields {
	#{$oe-selector-form-input-fields} {
		@content;
	}
}

// Apply a set of rules to button form fields.
@mixin button-form-fields {
	#{$oe-selector-form-button-fields} {
		@content;
	}
}

// Apply a set of rules to select form fields.
@mixin select-form-fields {
	#{$oe-selector-form-select-fields} {
		@content;
	}
}

// Apply a set of rules for all form fields.
@mixin all-form-fields {
	#{$oe-selector-form-input-fields},
	#{$oe-selector-form-button-fields},
	#{$oe-selector-form-select-fields} {
		@content;
	}
}

// Apply a set of rules to buttons.
@mixin buttons {
	button, .button, input[type="submit"] {
		@content;
	}
}

// Add vendor prefixes for calc()
@mixin calc($property, $expression) {
	#{$property}: -moz-calc(#{$expression});
	#{$property}: -o-calc(#{$expression});
	#{$property}: -webkit-calc(#{$expression});
	#{$property}: calc(#{$expression});
}

// This mixin allows us to generate two columns, one with a fixed width and
// the other with a fluid width.
@mixin grid-fixed-fluid($row-selector, $width) {
	.row {
		&#{$row-selector} {
			.column {
				&.fixed {
					width: $width;
				}
				&.fluid {
					@include calc("width", "100% - #{$width}");
					@media print {
						margin-top: 1em;
						width: 100%;
					}
				}
			}
		}
	}
}

@mixin event-background($colour, $icon, $watermark){
	border-color: $colour;
	.event-content {
		background-image: $watermark;
	}
	.event-title {
		background-image: $icon;
	}
}

@mixin navigation() {
	list-style-type: none;
	margin: 0;
	a {
		@include border-radius(3px);
		background: #fff;
		display: block;
		margin-bottom: 4px;
		padding: 4px 8px;
		&:hover {
			background: #3665ff;
			color: #fff;
		}
		&.selected {
			background: #ccc;
			color: #333;
		}
	}
	li:last-child {
		a {
			margin: 0;
		}
	}
}

@mixin sidebar-box() {
	background: #fafafa;
	margin: 0 0 $oe-box-gutter 0;
	h2 {
		margin-bottom: 12px;
	}
	.table-actions {
		select {
			width: auto;
		}
	}
	.box-header {
		margin: 0;
		.box-title {
			float: left;
		}
	}
	.box-actions {
		float: right;
	}
	@media print {
		border: 0;
		padding: 0;
	}
}